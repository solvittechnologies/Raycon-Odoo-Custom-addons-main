-
    Creating demo data that require looking for accounts
-
    !python {model: ir.model.data, id: False} : |
        company = self.env['res.users'].browse(uid).company_id
        journal_id = self.env['account.journal'].search([('type', '=', 'general'), ('id', '!=', company.currency_exchange_journal_id.id)], limit=1)
        sale_account_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_revenue')), ('tag_ids', 'in', [ref('account.account_tag_operating')])], limit=1)
        xfa_account_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_fixed_assets'))], limit=1)
        if not sale_account_id:
            sale_account_id = self.env['account.account'].search([('user_type_id', '=', ref('account.data_account_type_revenue'))], limit=1)
        if xfa_account_id and sale_account_id:
            vals = {
                'journal_id': journal_id.id,
                'name': 'Revenue Recognition Maintenance Contract - 1 Years',
                'method_number': 12,
                'method_period': 1,
                'account_asset_id': xfa_account_id.id,
                'account_depreciation_id': xfa_account_id.id,
                'account_depreciation_expense_id': sale_account_id.id,
                'type': 'sale',
            }
            self._update('account.asset.category', 'account_asset', vals, 'account_asset_category_sale')
